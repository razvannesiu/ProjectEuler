import java.io.File;

import java.io.FileNotFoundException;

import java.util.Scanner;



public class Euler11 {


	public final static int SIZE = 20;

	// number of adjacent numbers to be multiplied

	public final static int ADJ = 4;

	private static int[][] matrix = new int[SIZE][SIZE];


	public static void main(String[] args) {


		try {

			readMatrix();

			printMatrix();

			System.out.println("Max is: " + max());


		} catch (FileNotFoundException e) {

			System.out.println("FILE NOT FOUND");

		}

	}


	// compute max product of 4 adjacent numbers in all directions

	private static int max() {

		int productHorizontal, productVertical, productSecondaryD, productMainD, max = 0;


		for (int i = 0; i < SIZE; i++) {

			for (int j = ADJ - 1; j < SIZE; j++) {

				// compute product horizontally

				productHorizontal = matrix[i][j - 3] * matrix[i][j - 2]

						* matrix[i][j - 1] * matrix[i][j];


				if (productHorizontal > max) {

					max = productHorizontal;

				}


				// compute product vertically

				productVertical = matrix[j - 3][i] * matrix[j - 2][i]

						* matrix[j - 1][i] * matrix[j][i];


				if (productVertical > max) {

					max = productVertical;

				}


				if (i + 3 < SIZE) {

					// compute product diagonally right

					productSecondaryD = matrix[i][j] * matrix[i + 1][j - 1]

							* matrix[i + 2][j - 2] * matrix[i + 3][j - 3];


					if (productSecondaryD > max) {
	
						max = productSecondaryD;

					}



					// compute product diagonally left

					productMainD = matrix[j][i] * matrix[j - 1][i + 1]

							* matrix[j - 2][i + 2] * matrix[j - 3][i + 3];

					if (productMainD > max) {

						max = productMainD;

					}

				}

			}

		}

		return max;

	}



	// read matrix from a file

	private static void readMatrix() throws FileNotFoundException {

		Scanner in = new Scanner(new File("#file11.txt"));

		for (int i = 0; i < SIZE; i++) {

			for (int j = 0; j < SIZE; j++) {

				matrix[i][j] = in.nextInt();

			}

		}


		in.close();

	}



	// print the matrix (for testing)

	private static void printMatrix() {


		for (int i = 0; i < SIZE; i++) {

			for (int j = 0; j < SIZE; j++) {

				System.out.printf("%02d ", matrix[i][j]);

			}

			System.out.println();

		}

	}

}